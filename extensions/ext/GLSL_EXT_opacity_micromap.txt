Name

    EXT_opacity_micromap

Name Strings

    GL_EXT_opacity_micromap

Contact
    Eric Werness (ewerness 'at' nvidia.com), NVIDIA

Contributors

    Eric Werness, NVIDIA
    Joshua Barczak, Intel

Status

    Complete

Version

    Last Modified Date: 2022-07-28
    Revision: 1

Dependencies

    This extension can be applied to OpenGL GLSL versions 4.60
    (#version 460) and higher.

    This extension is written against revision 5 of the OpenGL Shading Language
    version 4.60, dated September 4, 2017.

    This extension interacts with revision 43 of the GL_KHR_vulkan_glsl
    extension, dated October 25, 2017.

    This extension requires GL_EXT_ray_tracing or GL_EXT_ray_query.

Overview

    This extension document modifies GLSL to add a new ray flag for opacity micromaps.

    Mapping to SPIR-V
    -----------------

    For informational purposes (non-normative), the following is an
    expected way for an implementation to map GLSL constructs to SPIR-V
    constructs:

      gl_RayFlagsForceOpacityMicromap2StateEXT -> ForceOpacityMicromap2StateEXT ray flag

Modifications to the OpenGL Shading Language Specification, Version 4.60

    Including the following line in a shader can be used to control the
    language features described in this extension:

      #extension GL_EXT_opacity_micromap                          : <behavior>

    where <behavior> is as specified in section 3.3.
    New preprocessor #defines are added:

      #define GL_EXT_opacity_micromap                             1

Additions to Chapter 7 of the OpenGL Shading Language Specification
(Built-in Variables)

    Add a new subsection 7.3.2, "Fixed Constants"

    The following constants are provided in all ray tracing shader stages

    const uint gl_RayFlagsForceOpacityMicromap2StateEXT = 1024U;

    This can be used as a flag for the 'rayflags' argument for a traceRayEXT() or rayQueryInitializeEXT() call,
    or for comparing value to gl_IncomingRayFlagsEXT.

Issues

    1) Is there anything else to put here?

       RESOLVED : No, just one ray flag.

Revision History

    Rev.  Date          Author     Changes
    ----  -----------   ------     -------------------------------------------
     1    2022-07-28    ewerness   Initial revision
